<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="/Users/zaferilk/Downloads/chinook (1).db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="4112"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,6:mainalbums"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="albums" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="52"/><column index="2" value="300"/><column index="3" value="47"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="customers" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="68"/><column index="2" value="64"/><column index="3" value="76"/><column index="4" value="250"/><column index="5" value="228"/><column index="6" value="115"/><column index="7" value="43"/><column index="8" value="90"/><column index="9" value="74"/><column index="10" value="117"/><column index="11" value="114"/><column index="12" value="161"/><column index="13" value="78"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="employees" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="68"/><column index="2" value="59"/><column index="3" value="61"/><column index="4" value="109"/><column index="5" value="62"/><column index="6" value="121"/><column index="7" value="121"/><column index="8" value="157"/><column index="9" value="64"/><column index="10" value="34"/><column index="11" value="50"/><column index="12" value="66"/><column index="13" value="107"/><column index="14" value="107"/><column index="15" value="148"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="tracks" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="47"/><column index="2" value="300"/><column index="3" value="52"/><column index="4" value="74"/><column index="5" value="49"/><column index="6" value="300"/><column index="7" value="73"/><column index="8" value="62"/><column index="9" value="55"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">---Write a query to find the maximum duration among the tracks. ---
---Your query should include TrackId, Name, Milliseconds.---

SELECT TrackId,  Name, Milliseconds 
FROM tracks
WHERE Milliseconds = (
SELECT max(Milliseconds)
FROM tracks);

----second solution
select TrackId, Name, max(Milliseconds)
from tracks;
----------------------------------------------------------------------------------

---Write a query to find the minimum duration among the tracks.---
---Your query should include TrackId, Name, Milliseconds.---

SELECT TrackId, Name, Milliseconds
FROM tracks
WHERE Milliseconds = (
SELECT min(Milliseconds)
FROM tracks)

------second solution

SELECT TrackId, Name, min(Milliseconds)
FROM tracks
-----------------------------------------------------------------------------------


-------------------------------------------------------------------------------------
-----Write a query to find the tracks whose bytes are higher than the average of the bytes of all tracks. 
-----Your query should include TrackId, Name, Bytes, general average and should be ordered by Bytes from highest to lowest. 
------General average is the average of all tracks. General average should repeat in every row. (Hint: You need to use two subqueries)

SELECT trackid, NAME, bytes
FROM   tracks
WHERE  bytes &gt; (SELECT bytes  FROM tracks WHERE  bytes &gt; 
								(SELECT Avg(bytes) FROM tracks))
ORDER  BY bytes DESC; 







--------------------------------------------------------------------------------------------</sql><current_tab id="0"/></tab_sql></sqlb_project>
